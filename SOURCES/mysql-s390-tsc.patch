diff --git a/include/my_rdtsc.h b/include/my_rdtsc.h
index 38ab0de..d24e211 100644
--- a/include/my_rdtsc.h
+++ b/include/my_rdtsc.h
@@ -125,6 +125,7 @@ C_MODE_END
 #define MY_TIMER_ROUTINE_MACH_ABSOLUTE_TIME      25
 #define MY_TIMER_ROUTINE_GETSYSTEMTIMEASFILETIME 26
 #define MY_TIMER_ROUTINE_ASM_SUNPRO_X86_64       27
+#define MY_TIMER_ROUTINE_ASM_S390                28
 
 #endif
 
diff --git a/mysys/my_rdtsc.c b/mysys/my_rdtsc.c
index 028c7f8..d368ba9 100644
--- a/mysys/my_rdtsc.c
+++ b/mysys/my_rdtsc.c
@@ -224,6 +224,13 @@ ulonglong my_timer_cycles(void)
     clock_gettime(CLOCK_SGI_CYCLE, &tp);
     return (ulonglong) tp.tv_sec * 1000000000 + (ulonglong) tp.tv_nsec;
   }
+#elif defined(__GNUC__) && defined(__s390__)
+  /* covers both s390 and s390x */
+  {
+    ulonglong result;
+    __asm__ __volatile__ ("stck %0" : "=Q" (result) : : "cc");
+    return result;
+  }
 #elif defined(HAVE_SYS_TIMES_H) && defined(HAVE_GETHRTIME)
   /* gethrtime may appear as either cycle or nanosecond counter */
   return (ulonglong) gethrtime();
@@ -533,6 +540,8 @@ void my_timer_init(MY_TIMER_INFO *mti)
   mti->cycles.routine= MY_TIMER_ROUTINE_ASM_GCC_SPARC32;
 #elif defined(__sgi) && defined(HAVE_CLOCK_GETTIME) && defined(CLOCK_SGI_CYCLE)
   mti->cycles.routine= MY_TIMER_ROUTINE_SGI_CYCLE;
+#elif defined(__GNUC__) && defined(__s390__)
+  mti->cycles.routine= MY_TIMER_ROUTINE_ASM_S390;
 #elif defined(HAVE_SYS_TIMES_H) && defined(HAVE_GETHRTIME)
   mti->cycles.routine= MY_TIMER_ROUTINE_GETHRTIME;
 #else
